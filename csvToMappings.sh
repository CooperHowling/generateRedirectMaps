#!/bin/bash

######################### INFO ##########################
#                                                       #
# Takes in a CSV file, outputs a JCR Package with       #
# Sling Resource mappings                               #
#                                                       #
# mappingError.txt file contains matchURL's that may    #
# have caused issues, and therefore have not been       #
# generated by the script                               #
#                                                       #
# Variables to change:                                  #
#     hostName                                          #
#     port                                              #
#                                                       #
# Example Run:                                          #
#     bash csvToMappings.sh redirectRules.csv           #
#														#
# Version 2:											#
#	  give sling:status 302 for all redirects           #
#	  if 4th column is true, it will use html path      #
#                                                       #
#########################################################

################# Check Map File Exists #################
input="$1"
if test -f "$input"; then
	echo "Generating mappings for $input ..."
else
	echo "Cannot find file"
	exit 1
fi
#########################################################

################## Editable Variables ###################
runmodeFolder="map.publish"
hostName="www-dev.ORGANIZATION.ca.80"
port="4503"
protocol="http"
#########################################################

#########################################################
mappingFolderPath="jcr_root/etc/$runmodeFolder"
protocolFolder="$mappingFolderPath/$protocol"
redirectType="internalRedirect"
metaInfFolder="META-INF/vault"
errorFile="mappingError.txt"
#########################################################

################# XML File Information ##################
mappingHeaderXML="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<jcr:root xmlns:sling=\"http://sling.apache.org/jcr/sling/1.0\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\"\n"
protocolXML="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<jcr:root xmlns:sling=\"http://sling.apache.org/jcr/sling/1.0\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\"\n\tjcr:primaryType=\"sling:Folder\"\nhidden=\"true\"/>"
internalXML="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<jcr:root xmlns:sling=\"http://sling.apache.org/jcr/sling/1.0\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\"\n\tjcr:primaryType=\"sling:Folder\"/>"
filterXML="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<workspaceFilter version=\"1.0\">\n\t<filter root=\"/etc/$runmodeFolder/$protocol\" mode=\"merge\"\n/></workspaceFilter>"
propertiesXML="<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n<properties>\n<comment>FileVault Package Properties</comment>\n<entry key=\"name\">Generated Mappings</entry>\n<entry key=\"group\">temporary</entry>\n</properties>"

jcrType="sling:Mapping"
httpStatus="{Long}302"
#########################################################

################ Create Package Contents ################
if [ -d "$protocolFolder" ]; then rm -Rf $protocolFolder; fi
mkdir -p "$protocolFolder"
printf "$protocolXML" >> "$mappingFolderPath/.content.xml"
printf "$internalXML" >> "$protocolFolder/.content.xml"
#########################################################

#################### Create META-INF ####################
if [ -d "$metaInfFolder" ]; then rm -Rf $metaInfFolder; fi
mkdir -p "$metaInfFolder"
printf "$filterXML" >> "$metaInfFolder/filter.xml"
printf "$propertiesXML" >> "$metaInfFolder/properties.xml"
#########################################################

################### Create Error File ###################
printf "Potential MatchURL errors below:\n" > $errorFile
#########################################################


############### Generate Resource Mappings ##############
#Loop through CSV file, grabbing all 3 columns. Skip header line
{
	read
	while IFS="," read -r match currUrl redirectURL isMigrated; do
		#Check for potential error in matchURL
		if [[ ! $match == "/"* ]]; then printf "$match\n" >> $errorFile; continue; fi
		
		mapFolderName=$(echo $match | tr -d -c '[:alnum:]')

		if [[ $isMigrated == "true"* ]]; then
			redirectURL=$(echo $redirectURL | tr -d ',\r\n' )
		else
			redirectURL=$(echo $currUrl | tr -d ',\r\n' )
		fi
		
		

		#Apply redirect type based on internal or external URL
		if [[ ! $redirectURL == "http"* ]]; then
			redirectType="internalRedirect"
		else
			redirectType="redirect"
		fi

		#Create mappings
		mkdir -p "$protocolFolder/$mapFolderName"
		contentFilePath="$protocolFolder/$mapFolderName/.content.xml"
		printf "$mappingHeaderXML" >> $contentFilePath
		printf "\t%s\n" "jcr:primaryType=\"$jcrType\"" >> $contentFilePath
		printf "\t%s\n" "sling:$redirectType=\"$redirectURL\"" >> $contentFilePath
		printf "\t%s\n" "sling:match=\"$hostName.$port$match\"" >> $contentFilePath
		printf "\t%s\n" "sling:status=\"$httpStatus\"/>" >> $contentFilePath
	done
} < $input
#########################################################


####### Zip up jcr package and clean up workspace #######
echo "Zipping up mappings into package..."
zip -rq "generatedMappings.zip" "jcr_root" "META-INF"
rm -Rf "jcr_root"
rm -Rf "META-INF"
#########################################################